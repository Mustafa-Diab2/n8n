name: Playwright Tests

on:
  push:
    branches: [playwright-test]
  workflow_dispatch:
    inputs:
      containers:
        description: 'Shard containers to use'
        required: false
        default: '[1, 2]'
        type: string

jobs:
  install:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.0.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.x
          cache: 'pnpm'

      - name: Cache build artifacts
        id: cache-build-artifacts
        uses: useblacksmith/cache@c5fe29eb0efdf1cf4186b9f7fcbbcbc0cf025662 # v5
        with:
          path: |
            /home/runner/.cache/Cypress
            /github/home/.pnpm-store
            ./packages/**/dist
          key: ${{ github.sha }}-ui

      - name: Install dependencies
        if: steps.cache-build-artifacts.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: PNPM Build
        run: pnpm build

      - name: Install Playwright browsers
        run: pnpm exec playwright install chromium --with-deps

  testing:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    needs: [install]
    strategy:
      fail-fast: false
      matrix:
        containers: ${{ fromJSON(inputs.containers || '[1, 2]') }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup and Restore Build
        uses: ./.github/actions/setup-and-build
        with:
          skip-build: true
          cache-suffix: 'playwright:build'
          cache-paths: |
            ./packages/**/dist
            ~/.cache/ms-playwright

      - name: Run Playwright tests (shard ${{ matrix.containers }}/${{ strategy.job-total }})
        working-directory: playwright
        run: pnpm exec playwright test --shard=${{ matrix.containers }}/${{ strategy.job-total }}
        env:
          E2E_TESTS: true
          PLAYWRIGHT_JUNIT_OUTPUT_NAME: results-${{ matrix.containers }}.xml
          CI: true
          TEST_SHARD_INDEX: ${{ matrix.containers }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: playwright-results-${{ matrix.containers }}
          path: |
            playwright-report/
            test-results/
            results-${{ matrix.containers }}.xml
          retention-days: 7

  merge-reports:
    if: always()
    needs: [testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Environment
        uses: ./.github/actions/setup-and-build
        with:
          skip-build: true
          enable-caching: false

      - name: Download all test results
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: playwright-results-*
          path: all-reports/

      - name: Merge test reports
        run: pnpm exec playwright merge-reports --reporter=html,github all-reports

      - name: Upload merged report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: playwright-report-merged
          path: playwright-report/
          retention-days: 14

  check_testing_matrix:
    runs-on: ubuntu-latest
    needs: [testing]
    outputs:
      all_tests_passed: ${{ steps.all_tests_passed.outputs.result }}
    steps:
      - name: Check all tests passed
        id: all_tests_passed
        run: |
          if [ "${{ needs.testing.result }}" == "success" ]; then
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "result=false" >> $GITHUB_OUTPUT
          fi
